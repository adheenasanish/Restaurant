@model IEnumerable<Restaurant.ViewModel.CartVM>

@{
    ViewData["Title"] = "Pay";
}

<h2>Payment</h2>

@{decimal subtotal = 0;
    int count = 0;}
<table class="table">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.Productname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Qty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.unitPrice)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Productname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Qty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.unitPrice)
                </td>


            </tr>
            subtotal = subtotal + Math.Round(Convert.ToDecimal(item.Qty * item.unitPrice), 2);
            count++;
        }
    </tbody>
    <tr align="left">
        <td><b> Subtotal :</b> </td>
        <td><b> </b></td>
        <td align="left"><b> @subtotal </b></td>
     
    </tr>
</table>

<div id="paypal-button"></div>
<script src="https://www.paypalobjects.com/api/checkout.js"></script>
<script>
    paypal.Button.render({
        env: 'sandbox', // Or ' production '
        style: { // You can customize your button here.
            size: 'small',
            color: 'gold',
            shape: 'pill',
            label: 'checkout'
        },
        client: {
            // You need to change this to your client ID
            sandbox: 'ASPGAq-Xkx0ohZmuH9Wf_bGbA39EP6ibGMrmCFKCsbPFyA2jGF8-9klduxMLalhvqoTdL7HtFjdKNODr',
            // production: '3W8F5EEJKUJP4KSY'  // Switch to ‘production’ when live.
        },

        commit: true, // Show a 'Pay Now' button

        payment: function (data, actions) {
            return actions.payment.create({
                payment: {
                    transactions: [{
                        // The 'custom' field helps you to link the paypal request
                        // with paypal's response which is important.

                        // You may want use a 'custom' field to send an accountID from
                        // your site so you can uniquely identify the person making the
                        // payment when Paypal notifies you.

                        // Sometimes a person at your site will pay at Paypal with
                        // an entirely different set of credentials. They may pay with
                        // a credit card or account which belongs to their spouse or
                        // another family member. In situations like these, relating
                        // payments to accounts on your site can be difficult.

                        // The custom property value that you send to Paypal for a
                        // payment request is returned in Paypal's reponse.
                        custom: '\' @ViewBag.userId \'',
                        amount: {
                            total: @ViewBag.TotalPrice, currency: 'USD',
                            
                        }
                    }
                    ]
                }
            });
        },

        onAuthorize: function (data, actions) {
            return actions.payment.execute().then(function (payment) {
                console.log("This is what comes back from Paypal: ")
                console.log(payment);
               // alert("This JSON is from Paypal: " + JSON.stringify(payment));
                console.log("-------------------------------------")
                var dataObject = {
                    "cart":             payment.cart,
                    "intent":           payment.intent,
                    "paymentID":        payment.id,
                    "create_time":      payment.create_time,
                    "paymentState":     payment.state,
                    "payerEmail":       payment.payer.payer_info.email,
                    "payerID":          payment.payer.payer_info.payer_id,
                    "payerFirstName":   payment.payer.payer_info.first_name,
                    "payerLastName":    payment.payer.payer_info.last_name,
                    "payerMiddleName":  payment.payer.payer_info.middle_name,
                    "payerCountryCode": payment.payer.payer_info.country_code,
                    "paymentMethod":    payment.payer.payment_method,
                    "payerStatus":      payment.payer.status,
                    "amount":           payment.transactions[0].amount.total,
                    "currency":         payment.transactions[0].amount.currency,
                    "custom": payment.transactions[0].custom,
                    "subtotal": payment.transactions[0].amount.details.subtotal
                }

                // The payment is complete!
                // You can now show a confirmation message to the customer
                $.ajax({
                    type: "post",
                    url: "/Paypal/PaySuccess",
                    data: JSON.stringify(dataObject),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",

                    //after success
                    success: function (msg) {
                        console.log("Data: " + JSON.stringify(data));
                        window.location.href
                        ="/Paypal/FinishShopping?paymentID=" + data.paymentID;
                    },
                    //after fail
                    error: function (msg) {
                        alert("fail: " + JSON.stringify(msg));
                    }
                });
            })
        },

        onCancel: function (data, actions) {
            /*
            * Buyer cancelled the payment
            */
        },
    }, '#paypal-button');
</script>

